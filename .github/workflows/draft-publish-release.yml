name: Draft and Publish Release

on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches:
      - develop

permissions:
  contents: write
  pull-requests: write

jobs:
  # Job 1 → always update the draft release
  update_release_draft:
    runs-on: ubuntu-latest
    steps:
      - name: Run Release Drafter
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job 2 → publish the draft, only after job 1 finishes
  publish_draft:
    needs: update_release_draft
    if: >
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'Publish')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  

      - name: Publish latest draft release
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const draft = releases.data.find(r => r.draft);
            if (!draft) {
              console.log("❌ No draft release found to publish.");
              return;
            }
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: draft.id,
              draft: false
            });
            console.log(`✅ Draft release "${draft.tag_name}" published!`);
